{"version":3,"sources":["components/Timer/AddRecordForm/AddRecordForm.module.css","components/Timer/DropDownList/DropDownList.module.css","components/TopPanel/Menu.js","contexts/Auth.js","config/axios.js","store/actions/types.js","store/actions/actions.js","components/TopPanel/LogPanel.js","components/TopPanel/TopPanel.js","components/Footer/Footer.js","assets/alarm-sound.wav","assets/tink-sound.wav","assets/click-sound.wav","assets/bird-sound.wav","utils/setSound.js","components/Timer/CountDown.js","components/Timer/DropDownList/AddLabelForm.js","components/Timer/DropDownList/ListItem.js","components/Timer/DropDownList/DropDownList.js","components/Timer/DropDownList/DropDownListConatiner.js","components/Timer/AddRecordForm/AddRecordForm.js","components/Timer/Timer.js","components/Stats/TimeDisplay.js","components/Stats/StatsOverview.js","components/Stats/Record.js","assets/loading-spinner.gif","components/Loading/Loading.js","components/Stats/StatsTable.js","config/firebase.js","components/Stats/Stats.js","components/Settings/FocusTimeSlider.js","components/Settings/SoundInput.js","components/Settings/Settings.js","components/NotFound/NotFound.js","components/Log/Log.js","components/App.js","store/reducers/settings.js","store/reducers/counter.js","store/reducers/stats.js","store/reducers/index.js","store/store.js","index.js"],"names":["module","exports","connect","state","isCounting","counter","to","className","AuthContext","createContext","AuthProvider","props","userId","localStorage","getItem","useState","user","setUser","Provider","value","children","instance","axios","create","baseURL","CHANGE_FOCUS_TIME","CHANGE_ALARM_SOUND","SET_STATS","SET_STATS_OVERALL","FETCH_LABELS_FULFILLED","FETCH_LABELS_PENDING","FETCH_LABELS_REJECTED","SET_CURRENT_LABEL","SET_IS_COUNTING","SET_IS_DURING_COUNTING","SET_TIME_LEFT","setStats","data","type","types","payload","setIsCounting","setIsDuringCounting","isDuringCounting","setTimeLeft","timeLeft","setCurrentLabel","label","currentLabel","saveRecord","dataToSave","dispatch","focusTime","timestamp","color","timeInMinutes","Date","now","post","then","res","console","log","catch","error","array","JSON","parse","unshift","setItem","stringify","fetchLabels","fetchLabelsPending","get","records","record","id","push","fetchLabelsFulfilled","err","fetchLabelsRejected","useContext","history","useHistory","onClick","e","target","textContent","clear","TopPanel","Footer","setSound","alarmSound","soundPath","click","tink","bird","alarm","settings","Math","floor","focusTimeMinutes","setFocusTimeMinutes","focusTimeSeconds","setFocusTimeSeconds","startDate","setStartDate","useEffect","timer","setTimeout","Audio","play","clearInterval","style","animationPlayState","colors","saveLabel","setIsFormOpen","form","setForm","styles","formContainer","dataset","name","data-name","action","onChange","prev","onSubmit","preventDefault","addRecordForm","htmlFor","labels","inputs","required","backgroundColor","map","fontSize","submit","closeBtn","deleteLabel","dataToDelete","delete","index","findIndex","element","newArray","filter","el","i","setIsListOpen","isEditable","key","classes","listItem","dot","button","data-key","isListOpen","list","isFormOpen","options","input","setIsAddRecordFormOpen","currentTime","setHours","getHours","getMinutes","getSeconds","DropDownListConatiner","min","step","isAddRecordFormOpen","TimeDisplay","time","hours","minutes","statsOverall","stats","setStatsOverall","today","reduce","current","parseInt","getTimeFromToday","week","day","getDay","diff","getDate","setDate","getTimeFromWeek","month","getTimeFromMonth","Record","date","getMonth","year","getFullYear","Loading","alt","src","spinner","reducer","stop","length","start","Error","StatsTable","loading","useReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","on","val","sorted","sort","a","b","changeFocusTime","focus","useRef","max","left","changeAlarmSound","sound","Settings","NotFound","LogComponent","email","password","setError","updateForm","auth","signInWithEmailAndPassword","userCredential","uid","removeItem","errorCode","code","errorMessage","message","createUserWithEmailAndPassword","App","exact","path","initialState","isLoading","isError","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d9f2e91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"AddRecordForm_formContainer__YnSDH\",\"addRecordForm\":\"AddRecordForm_addRecordForm__37Yl-\",\"inputs\":\"AddRecordForm_inputs__UId3H\",\"labels\":\"AddRecordForm_labels__2Sf3t\",\"submit\":\"AddRecordForm_submit__2jpxS\",\"closeBtn\":\"AddRecordForm_closeBtn__29k-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"DropDownList_input__2I-2H\",\"list\":\"DropDownList_list__3UwWY\",\"onEnter\":\"DropDownList_onEnter__1NTEd\",\"button\":\"DropDownList_button__XFatH\",\"listItem\":\"DropDownList_listItem__oPwVh\",\"dot\":\"DropDownList_dot__CVIwS\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nfunction Menu({ isCounting }) {\n    \n    return (\n        <>\n            <Link to=\"/timer\" className=\"menu-item\">Timer</Link>\n            <Link to={isCounting ? \"/timer\" : \"/stats\"} className={isCounting ? \"menu-item menu-inactive\" : \"menu-item\"}>Stats</Link>\n            <Link to={isCounting ? \"/timer\" : \"/settings\"} className={isCounting ? \"menu-item menu-inactive\" : \"menu-item\"}>Settings</Link>\n        </>\n\n    );\n  }\n\nconst mapStateToProps = (state) => {\n    return {\n      isCounting: state.counter.isCounting\n    }\n}\n  \nexport default connect(mapStateToProps, null)(Menu)","import React, { useState, createContext } from 'react'\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = (props) => {\n    const userId = localStorage.getItem('userId')\n    const [user, setUser] = useState(userId)\n    return (\n        <AuthContext.Provider value={{user, setUser}}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://productivity-counter-f8fed-default-rtdb.europe-west1.firebasedatabase.app/'\n})\n\nexport default instance","//SETTINGS\n\nexport const CHANGE_FOCUS_TIME = 'CHANGE_FOCUS_TIME'\nexport const CHANGE_ALARM_SOUND = 'CHANGE_ALARM_SOUND'\n\n\n//STATS\n\nexport const SET_STATS = 'SET_STATS'\nexport const SET_STATS_OVERALL = 'SET_STATS_OVERALL'\n\n\n//COUNTER\n\nexport const FETCH_LABELS_FULFILLED = 'FETCH_LABELS_FULFILLED'\nexport const FETCH_LABELS_PENDING = 'FETCH_LABELS_PENDING'\nexport const FETCH_LABELS_REJECTED = 'FETCH_LABELS_REJECTED'\nexport const SET_CURRENT_LABEL = 'SET_CURRENT_LABEL'\nexport const SET_IS_COUNTING = 'SET_IS_COUNTING'\nexport const SET_IS_DURING_COUNTING = 'SET_IS_DURING_COUNTING'\nexport const SET_TIME_LEFT = 'SET_TIME_LEFT'","import axios from '../../config/axios'\nimport * as types from './types'\n\n//SETTINGS\n\nexport const changeFocusTime = (focusTime) => ({\n    type: types.CHANGE_FOCUS_TIME,\n    focusTime\n})\n\nexport const changeAlarmSound = (alarmSound) => ({\n    type: types.CHANGE_ALARM_SOUND,\n    alarmSound\n})\n\n\n//STATS\n\nexport const setStats = (data) => ({\n    type: types.SET_STATS,\n    payload: data\n})\n\nexport const setStatsOverall = (data) => ({\n    type: types.SET_STATS_OVERALL,\n    payload: data\n})\n\n//COUNTER\n\nexport const setIsCounting = (isCounting) => ({\n    type: types.SET_IS_COUNTING,\n    isCounting\n})\n\nexport const setIsDuringCounting = (isDuringCounting) => ({\n    type: types.SET_IS_DURING_COUNTING,\n    isDuringCounting\n})\n\nexport const setTimeLeft = (timeLeft) => ({\n    type: types.SET_TIME_LEFT,\n    timeLeft: timeLeft\n})\n\nexport const setCurrentLabel = (label) => ({\n    type: types.SET_CURRENT_LABEL,\n    currentLabel: label\n})\n\nexport const saveRecord = (dataToSave) => (dispatch) => { \n    const {userId, focusTime, label, timestamp} = dataToSave\n    const data = {\n        label: label || {label: 'no label', color: null},\n        timeInMinutes: focusTime,\n        timestamp: timestamp ? timestamp : Date.now()\n    }\n\n    if (userId) {\n        axios\n            .post(`/records/${userId}.json`, data)\n            .then(res => {\n                console.log('Successfully added to database')\n            })\n            .catch(error => console.log(error))\n    } else {\n        const array = JSON.parse(localStorage.getItem('data')) || []\n        array.unshift(data)\n        localStorage.setItem('data', JSON.stringify(array))\n    }\n}\n\nexport const fetchLabels = (userId) => (dispatch) => {\n    dispatch(fetchLabelsPending())\n    if (userId) {\n        axios\n            .get(`/labels/${userId}.json`)\n            .then(res => res.data)\n            .then(data => {\n                const records = []\n                for (let record in data) {\n                    data[record].id = record\n                    records.push(data[record])\n                }\n                dispatch(fetchLabelsFulfilled(records))\n            })\n            .catch(err => {\n                dispatch(fetchLabelsRejected(err))\n            })\n      } else {\n            const data = JSON.parse(localStorage.getItem('labels')) || []\n            dispatch(fetchLabelsFulfilled(data))\n      }\n}\n\nexport const fetchLabelsFulfilled = (data) => ({\n    type: types.FETCH_LABELS_FULFILLED,\n    payload: data\n})\n\nexport const fetchLabelsPending = () => ({\n    type: types.FETCH_LABELS_PENDING\n})\n\nexport const fetchLabelsRejected = (error) => ({\n    type: types.FETCH_LABELS_REJECTED,\n    payload: error\n})\n\nexport const saveLabel = (dataToSave) => (dispatch) => { \n    const {label, color, userId} = dataToSave\n    const data = {\n        label: label || 'no label',\n        color: color\n    }\n\n    if (userId) {\n        axios\n            .post(`/labels/${userId}.json`, data)\n            .then(res => {\n                console.log('Successfully added to database')\n                dispatch(fetchLabels(userId))\n            })\n            .catch(error => console.log(error))\n    } else {\n        const array = JSON.parse(localStorage.getItem('labels')) || []\n        array.push(data)\n        localStorage.setItem('labels', JSON.stringify(array))\n        dispatch(fetchLabels(userId))\n    }\n}\n\n\nexport const deleteLabel = (dataToDelete) => (dispatch) => { \n    const {data, user} = dataToDelete\n    \n    if (user) {\n        axios\n            .delete(`/labels/${user}/${data.id}.json`)\n            .then(res => {\n                console.log('Successfully deleted')\n                dispatch(fetchLabels(user))\n            })\n            .catch(error => console.log(error))\n    } else {\n        const array = JSON.parse(localStorage.getItem('labels')) || []\n        const index = array.findIndex(element => element.label === data.label && element.color === data.color)\n        const newArray = array.filter((el, i) => i !== index)\n        localStorage.setItem('labels', JSON.stringify(newArray))\n        dispatch(fetchLabels(user))\n    }\n}","import React, {useContext} from 'react';\nimport {AuthContext} from '../../contexts/Auth'\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setStats } from '../../store/actions/actions';\n\n\nconst LogPanel = ({ setStats }) => {\n    const { user, setUser } = useContext(AuthContext)\n    const history = useHistory()\n\n    const handleClick = (e) => {\n        if (e.target.textContent === \"Log out\") {\n            localStorage.clear()\n            setUser('')\n            setStats(null)\n            history.push('/timer')\n        } else if (e.target.textContent === \"Log in\") {\n            history.push('/login')\n        }\n    }\n\n    return (\n        <div className=\"log-panel\">\n            <p>Productivity Counter</p>\n            <button onClick={handleClick}>{user ? \"Log out\" : \"Log in\"}</button>\n        </div>\n\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({ \n    setStats: (records) => dispatch(setStats(records))\n  });\n\nexport default connect(null, mapDispatchToProps)(LogPanel)\n","import React from 'react';\nimport Menu from './Menu'\nimport LogPanel from './LogPanel'\nimport './TopPanel.css';\n\n\nexport default function TopPanel() {\n    \n    return (\n        <nav className=\"menu\">\n            <LogPanel />\n            <Menu />\n        </nav>\n\n    );\n  }","import React from 'react';\nimport './Footer.css';\n\nexport default function Footer() {\n    \n    return (\n      <div className=\"footer\">\n        Created by Kinga Mamak\n      </div>\n    );\n  }","export default __webpack_public_path__ + \"static/media/alarm-sound.10a06f20.wav\";","export default __webpack_public_path__ + \"static/media/tink-sound.305dccef.wav\";","export default __webpack_public_path__ + \"static/media/click-sound.40d4b699.wav\";","export default __webpack_public_path__ + \"static/media/bird-sound.ebc2eaa4.wav\";","import alarm from '../assets/alarm-sound.wav'\nimport tink from '../assets/tink-sound.wav'\nimport click from '../assets/click-sound.wav'\nimport bird from '../assets/bird-sound.wav'\n\nconst setSound = (alarmSound) => {\n    let soundPath\n    if (alarmSound === \"click-sound\") {\n        soundPath = click\n    } else if (alarmSound === \"tink-sound\") {\n        soundPath = tink\n    } else if (alarmSound === \"birds-sound\") {\n        soundPath = bird\n    } else if (alarmSound === \"alarm-sound\") {\n        soundPath = alarm\n    }\n\n    return soundPath\n}\n\nexport default setSound","import React, { useEffect, useState, useContext} from 'react';\nimport setSound from '../../utils/setSound';\nimport { AuthContext } from '../../contexts/Auth'\nimport { connect } from \"react-redux\";\nimport { setIsCounting, setIsDuringCounting, setTimeLeft, saveRecord, setCurrentLabel } from \"../../store/actions/actions\"\n\nconst CountDown = ({ isCounting, setIsCounting, focusTime, currentLabel, setCurrentLabel, alarmSound, setIsDuringCounting,  timeLeft, setTimeLeft, saveRecord }) => {\n    const [focusTimeMinutes, setFocusTimeMinutes] = useState(Math.floor(timeLeft / 1000 / 60));\n    const [focusTimeSeconds, setFocusTimeSeconds] = useState(Math.floor((timeLeft / 1000) % 60));\n    const [startDate, setStartDate] = useState(Date.now())\n\n    const { user } = useContext(AuthContext)\n\n    useEffect(() => {\n        let timer = null\n        \n        if (isCounting && timeLeft >= 1000) {\n          timer = setTimeout(() => {\n            setTimeLeft(timeLeft - (Date.now() - startDate))\n            setStartDate(Date.now())\n          }, 100);\n\n        } else if (!isCounting) {\n          timer = setTimeout(() => {\n            setStartDate(Date.now())\n          }, 500)\n          \n        } else if (isCounting && timeLeft < 1000) {\n          timer = setTimeout(() => {\n            setIsCounting(false)\n            setIsDuringCounting(false)\n            setTimeLeft(focusTime * 1000 * 60)\n            saveRecord({userId: user, focusTime, label: currentLabel})\n            setCurrentLabel(null)\n            const sound = new Audio(setSound(alarmSound))\n            sound.play()\n          }, 100)  \n        }\n  \n        setFocusTimeMinutes(timeLeft === 3600000 ? 60 : Math.floor((timeLeft / 1000 / 60) % 60))\n        setFocusTimeSeconds(Math.floor((timeLeft / 1000) % 60))\n  \n        return () => clearInterval(timer)\n      }, [isCounting, alarmSound, focusTime, currentLabel, setCurrentLabel, setIsCounting, setIsDuringCounting, user, setFocusTimeMinutes, setFocusTimeSeconds, timeLeft, startDate, setTimeLeft, setStartDate, saveRecord])\n      \n    return (\n        <div className=\"timer\" style={isCounting ? {animationPlayState: \"running\"} : {animationPlayState: \"paused\"}}>\n          <p className=\"timer-time\">{focusTimeMinutes}:{focusTimeSeconds > 9 ? focusTimeSeconds : '0' + focusTimeSeconds}</p>\n          <p className=\"timer-type\">FOCUS</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    focusTime: state.settings.focusTime,\n    alarmSound: state.settings.alarmSound,\n    isCounting: state.counter.isCounting,\n    timeLeft: state.counter.timeLeft,\n    currentLabel: state.counter.currentLabel\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({ \n  setIsCounting: state => dispatch(setIsCounting(state)),\n  setIsDuringCounting: state => dispatch(setIsDuringCounting(state)),\n  setTimeLeft: state => dispatch(setTimeLeft(state)),\n  saveRecord: state => dispatch(saveRecord(state)),\n  setCurrentLabel: state => dispatch(setCurrentLabel(state))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountDown)","import { useContext, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { AuthContext } from '../../../contexts/Auth'\nimport { saveLabel } from '../../../store/actions/actions'\nimport styles from '../AddRecordForm/AddRecordForm.module.css'\n\nexport const colors = [\n    {label: 'Red', color: '#f44336'},\n    {label: 'Pink', color: '#e91e63'},\n    {label: 'Indigo', color: '#3f51b5'},\n    {label: 'Cyan', color: '#00bcd4'},\n    {label: 'Green', color: '#4caf50'},\n    {label: 'Yellow', color: '#ffeb3b'},\n    {label: 'Orange', color: '#ff9800'},\n    {label: 'Deep orange', color: '#ff5722'},\n    {label: 'Grey', color: '#9e9e9e'},\n    {label: 'Blue grey', color: '#607d8b'},\n]\n\nconst AddLabelForm = ({ setIsFormOpen, saveLabel }) => {\n    const [form, setForm] = useState(colors[0])\n    const { user } = useContext(AuthContext)\n    \n    const handleChange = (e) => {\n        setForm(prev=> ({\n            ...prev,\n            [e.target.id]: e.target.value\n        }))\n    }\n\n    const handleClose = (e) => {\n        if (e.target.dataset.name === \"enable-close\") {\n            setIsFormOpen(false)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const data = {...form, userId: user}\n        saveLabel(data)\n        setIsFormOpen(false)\n    }\n\n    return (\n        <div className={styles.formContainer} onClick={handleClose} data-name=\"enable-close\">\n                <form \n                    action=\"submit\" \n                    onChange={handleChange} \n                    onSubmit={handleSubmit} \n                    className={styles.addRecordForm}\n                >   \n                    <label htmlFor=\"label\" className={styles.labels}>Label</label>\n                    <input \n                        type=\"text\" \n                        className={styles.inputs} \n                        id=\"label\" \n                        required\n                    />\n                    <label htmlFor=\"label\" className={styles.labels}>Color</label>\n                    <select \n                        id=\"color\"\n                        className={styles.inputs}\n                        style={{backgroundColor: form.color}}\n                        value={form.colors}\n                        required\n                    >\n                            {colors.map(color => <option style={{backgroundColor: color.color, fontSize: '1.5rem'}} value={color.color} ></option>)}\n                        </select>\n                    <button className={styles.submit}>Add label</button>\n                    <i \n                        className={`fas fa-times-circle ${styles.closeBtn}`} \n                        data-name=\"enable-close\" \n                    ></i>\n                </form> \n            </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({ \n    saveLabel: state => dispatch(saveLabel(state))\n  });\n  \n\nexport default connect(null, mapDispatchToProps)(AddLabelForm)","import React, { useContext } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteLabel, setCurrentLabel } from '../../../store/actions/actions'\nimport classes from './DropDownList.module.css'\nimport { AuthContext } from '../../../contexts/Auth'\n\n\n\nconst ListItem = (props) => {\n    const { data, setIsListOpen, setCurrentLabel, isEditable, deleteLabel } = props\n    const { user } = useContext(AuthContext)\n\n    const handleClick = (e) => {\n        if (e.target.dataset.key === 'remove') {\n            deleteLabel({user, data})\n        } else {\n            setCurrentLabel(data)\n            setIsListOpen(false)\n        }\n    }\n\n    return(\n        <div onClick={handleClick} className={classes.listItem}>\n            <span className={classes.dot} style={{backgroundColor: data.color}}></span>\n            <p>{data.label}</p>\n            {isEditable && <i className={`${classes.button} fas fa-times`} data-key=\"remove\"></i>}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({ \n    setCurrentLabel: state => dispatch(setCurrentLabel(state)),\n    deleteLabel: state => dispatch(deleteLabel(state))\n  });\n\nexport default connect(null, mapDispatchToProps)(ListItem)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setCurrentLabel } from '../../../store/actions/actions'\nimport classes from './DropDownList.module.css'\nimport ListItem from './ListItem'\n\nconst DropDownList = (props) => {\n    const { isListOpen, setIsListOpen, setIsFormOpen, setCurrentLabel, isEditable, labels } = props\n\n    const handleClick = () => {\n        setCurrentLabel(null)\n        setIsListOpen(false)\n        setIsFormOpen(true)\n    }\n\n    return(\n        <div className={classes.list}>\n            {isEditable && <div className={classes.listItem} onClick={handleClick}><span className={classes.dot}>+</span>Add new label</div>}\n            {isListOpen && labels.map((label, i) => <ListItem data={label} {...props} key={i} />)}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      labels: state.counter.labels,\n    }\n  }\n\nconst mapDispatchToProps = dispatch => ({ \n    setCurrentLabel: state => dispatch(setCurrentLabel(state))\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDownList)","import React, { useContext, useEffect, useState } from 'react'\nimport AddLabelForm from './AddLabelForm'\nimport DropDownList from './DropDownList'\nimport classes from './DropDownList.module.css'\nimport { fetchLabels } from '../../../store/actions/actions'\nimport { connect } from 'react-redux'\nimport { AuthContext } from '../../../contexts/Auth'\n\nconst DropDownListContainer = ({ labels, fetchLabels, currentLabel, isCounting, isEditable }) => {   \n    const [isListOpen, setIsListOpen] = useState(false)\n    const [isFormOpen, setIsFormOpen] = useState(false)\n    const { user } = useContext(AuthContext)\n\n    const props = {options: labels, isListOpen, setIsListOpen, setIsFormOpen, isEditable}\n    \n    useEffect(() => {\n        fetchLabels(user)\n    },[fetchLabels, user])\n\n    useEffect(() => {\n        if (!currentLabel && isCounting) setIsListOpen(true)\n        else setIsListOpen(false)\n    }, [currentLabel, isCounting])\n\n    return(\n        <>\n        <div className={classes.input} >\n            {currentLabel && <span className={classes.dot} style={{backgroundColor: currentLabel.color}}></span>}\n            {currentLabel ?  currentLabel.label : <p style={{color: 'gray'}}>Choose...</p>}\n            <button\n                type=\"button\"\n                className={classes.button} \n                onClick={() => setIsListOpen(prev=>!prev)}\n            >\n                {isListOpen ? <i className=\"fas fa-chevron-up\"></i> : <i className=\"fas fa-chevron-down\"></i>}\n            </button>\n            {isListOpen && <DropDownList {...props}/>}\n            \n        </div>\n        {isFormOpen && <AddLabelForm setIsFormOpen={setIsFormOpen} />}\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      labels: state.counter.labels,\n      currentLabel: state.counter.currentLabel,\n      isCounting: state.counter.isCounting\n    }\n  }\n\nconst mapDispatchToProps = dispatch => ({ \n    fetchLabels: state => dispatch(fetchLabels(state))\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDownListContainer)","import React, { useState, useContext } from 'react'\nimport { connect } from \"react-redux\";\nimport { saveRecord, setCurrentLabel } from \"../../../store/actions/actions\"\nimport { AuthContext } from '../../../contexts/Auth'\nimport styles from './AddRecordForm.module.css'\nimport DropDownListConatiner from '../DropDownList/DropDownListConatiner';\n\nconst AddRecordForm = ({ saveRecord, setIsAddRecordFormOpen, currentLabel, setCurrentLabel }) => {\n    const { user } = useContext(AuthContext)\n    \n    const [form, setForm] = useState({\n        timestamp: null,\n        focusTime: null\n    })\n\n    const handleChange = (e) => {\n        if (e.target.id === \"timestamp\") {\n            const currentTime = new Date()\n            const timestamp = new Date(e.target.value).setHours(currentTime.getHours(), currentTime.getMinutes(), currentTime.getSeconds())\n            setForm(prev => ({...prev, timestamp}))\n        } else {\n            const key = e.target.id\n            setForm(prev => ({...prev, [key]: e.target.value}))\n        }\n    }\n\n    const handleClose = (e) => {\n        if (e.target.dataset.name === \"enable-close\") {\n            setIsAddRecordFormOpen(false)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const dataToSave = {...form, label: currentLabel, userId: user}\n        saveRecord(dataToSave)\n        setCurrentLabel(null)\n        setIsAddRecordFormOpen(false)\n    }\n    return(\n        <>\n            <div className={styles.formContainer} onClick={handleClose} data-name=\"enable-close\">\n                <form \n                    action=\"submit\" \n                    onChange={handleChange} \n                    onSubmit={handleSubmit} \n                    className={styles.addRecordForm}\n                >  \n                    <label htmlFor=\"label\" className={styles.labels}>Label</label>\n                    <DropDownListConatiner isEditable={false}/>\n                    <label htmlFor=\"label\" className={styles.labels}>Time in minutes</label>\n                    <input \n                        type=\"number\" \n                        min=\"5\"  \n                        step=\"5\" \n                        className={styles.inputs} \n                        id=\"focusTime\" \n                        required\n                    />\n                    <label htmlFor=\"label\" className={styles.labels} >Date</label>\n                    <input \n                        type=\"date\" \n                        className={styles.inputs} \n                        id=\"timestamp\" \n                        required\n                    />\n                    <button className={styles.submit}>Add record</button>\n\n                    <i \n                        className={`fas fa-times-circle ${styles.closeBtn}`} \n                        data-name=\"enable-close\" \n                    ></i>\n                </form> \n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      currentLabel: state.counter.currentLabel\n    }\n  }\n\nconst mapDispatchToProps = dispatch => ({ \n    saveRecord: state => dispatch(saveRecord(state)),\n    setCurrentLabel: state => dispatch(setCurrentLabel(state))\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecordForm)","import React, { useState } from 'react';\nimport './Timer.css';\nimport CountDown from './CountDown'\nimport { connect } from \"react-redux\";\nimport { setCurrentLabel, setIsCounting, setIsDuringCounting, setTimeLeft } from \"../../store/actions/actions\"\nimport AddRecordForm from './AddRecordForm/AddRecordForm';\nimport DropDownListContainer from './DropDownList/DropDownListConatiner';\n\nconst Timer = ({ isCounting, setIsCounting, isDuringCounting, setIsDuringCounting, focusTime, setTimeLeft, currentLabel, setCurrentLabel }) => {\n  const [isAddRecordFormOpen, setIsAddRecordFormOpen] = useState(false)\n\n    const handleStartCountingClick = () => {\n      setIsCounting(!isCounting)\n      if (!isDuringCounting) setIsDuringCounting(true)\n    }\n\n    const handleResetCountingClick = () => {\n      if (!isDuringCounting && !currentLabel) return\n      setIsCounting(false)\n      setIsDuringCounting(false)\n      setCurrentLabel(null)\n      setTimeLeft(focusTime * 1000 * 60)\n    }\n\n    return (\n      <>\n      <div className=\"timer-container container\">\n        <h2>Timer</h2>\n        <DropDownListContainer isEditable={true}/>\n        <CountDown \n          label={currentLabel}\n        />\n        <div className=\"timer-buttons\">\n          <i \n            onClick={handleResetCountingClick}\n            className=\"timer-reset fas fa-undo\"></i>  \n          <i \n            onClick={handleStartCountingClick} \n            className={isCounting ? \"timer-start far fa-pause-circle\" : \"timer-start far fa-play-circle\"}></i>\n        </div>\n        <p className=\"add-record-form-label\">Do you want to add record? Click <strong onClick={() => setIsAddRecordFormOpen(true)}>here</strong></p>\n      </div>\n      {isAddRecordFormOpen && <AddRecordForm setIsAddRecordFormOpen={setIsAddRecordFormOpen}/>}\n      \n      </>\n    );\n  }\n  \nconst mapStateToProps = (state) => {\n  return {\n    isCounting: state.counter.isCounting,\n    isDuringCounting: state.counter.isDuringCounting,\n    focusTime: state.settings.focusTime,\n    currentLabel: state.counter.currentLabel\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({ \n  setIsCounting: state => dispatch(setIsCounting(state)),\n  setIsDuringCounting: state => dispatch(setIsDuringCounting(state)),\n  setTimeLeft: state => dispatch(setTimeLeft(state)),\n  setCurrentLabel: state => dispatch(setCurrentLabel(state))\n});\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)\n  ","import React from 'react'\n\nconst TimeDisplay = ({time}) => {\n    const hours = Math.floor(time / 60)\n    const minutes = time - hours * 60\n    return (\n        <p>{hours}h {minutes}m</p>\n    )\n}\n\nexport default TimeDisplay","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setStatsOverall } from '../../store/actions/actions'\nimport TimeDisplay from './TimeDisplay'\n\n\nconst getTimeFromToday = (records) => {\n    if (!records) return 0\n    const today = new Date().setHours(0,0,0)\n    const time = records.reduce( (prev, current) => {\n        if (current.timestamp >= today) {\n            return prev + parseInt(current.timeInMinutes)\n        } else {\n            return prev\n        }\n    }, 0)\n    return time\n}\n\nconst getTimeFromWeek = (records) => {\n    if (!records) return 0\n    const today = new Date()\n    const day = today.getDay()\n    const diff = today.getDate() - day + (day === 0 ? -6:1)\n    const startDate = new Date(today.setDate(diff)).setHours(0,0,0)\n    const time = records.reduce( (prev, current) => {\n        if (current.timestamp >= startDate) {\n            return prev + parseInt(current.timeInMinutes)\n        } else {\n            return prev\n        }\n    }, 0)\n    return time\n}\n\nconst getTimeFromMonth = (records) => {\n    if (!records) return 0\n    const today = new Date()\n    const startDate = new Date(today.setDate(1)).setHours(0,0,0)\n\n    const time = records.reduce( (prev, current) => {\n        if (current.timestamp >= startDate) {\n            return prev + parseInt(current.timeInMinutes)\n        } else {\n            return prev\n        }\n    }, 0)\n    return time\n}\n\nconst StatsOverview = ({ records, statsOverall, setStatsOverall }) => {\n\n    useEffect(() => {\n        const today = getTimeFromToday(records)\n        const week = getTimeFromWeek(records)\n        const month = getTimeFromMonth(records)\n            \n        setStatsOverall({today, week, month})\n        \n    }, [records, setStatsOverall])\n\n    return (\n        <div className=\"stats-overview\">\n            <h3>Overview</h3>\n            <div className=\"stats-item\">\n                {records ? <TimeDisplay time={statsOverall.today} /> : <p>-</p>}\n                <p>Today</p>\n            </div>\n            <div className=\"stats-item\">\n                {records ? <TimeDisplay time={statsOverall.week} /> : <p>-</p>}\n                <p>Week</p>\n            </div>\n            <div className=\"stats-item\">\n                {records ? <TimeDisplay time={statsOverall.month} /> : <p>-</p>}\n                <p>Month</p>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      statsOverall: state.stats.statsOverall\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({ \n    setStatsOverall: (records) => dispatch(setStatsOverall(records))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatsOverview);","import React from 'react'\n\nconst Record = ({timestamp, label, timeInMinutes}) => {\n    const date = new Date(timestamp)\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()\n    const month = date.getMonth() < 9 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)\n    const year = date.getFullYear()\n    \n    return (\n        <tr>\n            <td>{day}/{month}/{year}</td>\n            <td>{label.label}</td>\n            <td>{timeInMinutes} min</td>\n          </tr>\n    )\n}\n\nexport default Record","export default __webpack_public_path__ + \"static/media/loading-spinner.2b3e1008.gif\";","import React from 'react'\nimport './Loading.css';\nimport spinner from '../../assets/loading-spinner.gif'\n\nconst Loading = () => {\n    return (\n        <div className=\"loading\">\n            <img\n                className=\"loading-spinner\"\n                alt=\"loading-spinner\"\n                src={spinner}\n            />\n        </div>\n    )\n}\n\nexport default Loading","import React, { useReducer } from 'react';\nimport Record from './Record'\nimport Loading from '../Loading/Loading'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'next':\n      if(state.stop >= action.length - 1) return state\n      return {start: state.start + 5, stop: state.stop + 5};\n    case 'prev':\n      if (state.start === 0) return state\n      return {start: state.start - 5, stop: state.stop - 5};\n    default:\n      throw new Error();\n  }\n}\n\nexport default function StatsTable({ records, loading }) {\n  const [state, dispatch] = useReducer(reducer, {\n    start: 0,\n    stop: 4\n  });\n\n  const displayTable = () => {\n    if (records === null) {\n      return <Loading />\n    } else if (records.length > 0) {\n      return (\n        <>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Label</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            {records.map( (record, index) => {\n              if (index >= state.start && index <= state.stop) return <Record timestamp={record.timestamp} label={record.label} timeInMinutes={record.timeInMinutes} key={record.timestamp} />\n              else return null \n            }) }\n          </tbody>\n        </table>\n        <button className={state.start === 0 ? `go-to button-inactive` : `go-to`} onClick={() => dispatch({type: 'prev'}) }>{`<`}</button>\n        <button className={state.stop >= records.length - 1 ? `go-to button-inactive` : `go-to`} onClick={() => dispatch({type: 'next', length: records.length}) }>{`>`}</button>\n        </>\n      )\n    } else {\n      return (\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Label</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n        </table>\n      )\n    }\n  }\n\n  return (\n    <div className=\"latest-sessions\">\n      <h3>Latest sessions</h3>\n      {displayTable()}\n      \n    </div>\n  );\n}","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBSHpvMjTlpU5jqIK56q01MtZyKZuiI-F0\",\n    authDomain: \"productivity-counter-f8fed.firebaseapp.com\",\n    databaseURL: \"https://productivity-counter-f8fed-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"productivity-counter-f8fed\",\n    storageBucket: \"productivity-counter-f8fed.appspot.com\",\n    messagingSenderId: \"993104967686\",\n    appId: \"1:993104967686:web:0ed07f89d714b18de62b87\",\n    measurementId: \"G-FT8B6494T4\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React, {useContext, useEffect} from 'react';\nimport StatsOverview from './StatsOverview'\nimport StatsTable from './StatsTable'\nimport './Stats.css';\nimport { AuthContext } from '../../contexts/Auth'\nimport { connect } from \"react-redux\";\nimport { setStats } from \"../../store/actions/actions\"\nimport firebase from '../../config/firebase'\n\nconst Stats = ({ records, setStats}) => {\n  const { user } = useContext(AuthContext)\n    \n  useEffect(() => {\n    if (user) {\n      const userData = firebase.database().ref(`/records/${user}`)\n      userData.on('value', (data) => {\n        const records = []\n        for(let el in data.val()) {\n          records.push(data.val()[el])\n        }\n        const sorted = records.sort((a, b) => b.timestamp - a.timestamp)\n        setStats(sorted)\n      })\n    } else {\n      const data = JSON.parse(localStorage.getItem('data')) || []\n      const sorted = data.sort((a, b) => b.timestamp - a.timestamp)\n      setStats(sorted)\n    }\n  }, [user, setStats])    \n    \n\n    return (\n      <div className=\"stats container\">\n        <h2>Statistics</h2>\n        <StatsOverview records={records}/>\n        <StatsTable records={records} />\n      </div>\n    );\n  }\n\nconst mapStateToProps = (state) => {\n    return {\n      records: state.stats.records\n    }\n}\n  \nconst mapDispatchToProps = dispatch => ({ \n    setStats: (records) => dispatch(setStats(records))\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stats)","import React, {useRef} from 'react'\nimport { connect } from \"react-redux\";\nimport { changeFocusTime, setTimeLeft } from \"../../store/actions/actions\"\n\nconst FocusTimeSlider = ({ changeFocusTime, focusTime, setTimeLeft }) => {\n    const focus = useRef(focusTime)\n\n    const handleOnChange = () => {\n      changeFocusTime(focus.current.value)\n      setTimeLeft(focus.current.value * 1000 * 60)\n    }\n\n    return (\n        <>\n        <h3>Focus time</h3>\n        <div className=\"slider-container\">\n          <input\n            className=\"slider-input\" \n            type=\"range\" \n            id=\"focus\" \n            min=\"5\" \n            max=\"60\" \n            step=\"5\"\n            ref={focus}\n            value={focusTime}\n            onChange={handleOnChange}\n          />\n          <label className=\"slider-label-top\" style={{left: `${1 + (focusTime/5 - 1) * (98/11)}%`}}><p>{focusTime}</p></label>\n          <p className=\"slider-label\">5min</p>\n          <p className=\"slider-label\">60min</p>\n        </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    focusTime: state.settings.focusTime,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({ \n  changeFocusTime: time => dispatch(changeFocusTime(time)),\n  setTimeLeft: state => dispatch(setTimeLeft(state))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FocusTimeSlider)\n\n","import React from 'react'\nimport setSound from '../../utils/setSound'\nimport { connect } from \"react-redux\";\nimport { changeAlarmSound } from \"../../store/actions/actions\"\n\nconst SoundInput = ({changeAlarmSound, alarmSound}) => {\n\n    const handleChange = (e) => {\n        let alarmSound = e.target.value\n        const soundPath = setSound(alarmSound)\n        const sound = new Audio(soundPath)\n        changeAlarmSound(alarmSound)\n        sound.play()\n    }\n    return (\n        <>\n        <h3>Alarm sound</h3>\n        <select name=\"sound\" id=\"sound\" onChange={handleChange} value={alarmSound}>\n            <option value=\"alarm-sound\">Alarm</option>\n            <option value=\"birds-sound\">Birds</option>\n            <option value=\"click-sound\">Click</option>\n            <option value=\"tink-sound\">Tink</option>\n        </select>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      alarmSound: state.settings.alarmSound,\n    }\n  }\n  \nconst mapDispatchToProps = dispatch => ({ \n    changeAlarmSound: sound => dispatch(changeAlarmSound(sound))\n});\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SoundInput)\n","import React from 'react';\nimport FocusTimeSlider from './FocusTimeSlider';\nimport SoundInput from './SoundInput'\nimport './Settings.css';\n\nexport default function Settings() {\n\n    return (\n      <div className=\"settings container\">\n        <h2>Settings</h2>\n        <FocusTimeSlider />\n        <SoundInput />\n      </div>\n    );\n  }","import React from 'react';\n\nexport default function NotFound() {\n    \n    return (\n      <div className=\"container\">\n        Not Found\n      </div>\n    );\n  }","import React, { useState, useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport firebase from '../../config/firebase'\nimport {AuthContext} from '../../contexts/Auth'\nimport './Log.css';\nimport { useHistory } from \"react-router-dom\";\n\nconst LogComponent = ({type}) => {\n    const [form, setForm] = useState({\n        email: '',\n        password: ''\n    })\n    const [error, setError] = useState('')\n    const { setUser } = useContext(AuthContext)\n    const history = useHistory()\n\n    const updateForm = (e) => {\n        setError(false)\n        setForm(prev => {\n            return {\n                ...prev,\n                [e.target.id]: e.target.value\n            }\n        })\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (type === \"login\") {\n            firebase.auth().signInWithEmailAndPassword(form.email, form.password)\n            .then((userCredential) => {\n                var user = userCredential.user;\n                setUser(user.uid)\n                localStorage.setItem('userId', user.uid)\n                localStorage.removeItem('data')\n                localStorage.removeItem('labels')\n                history.push('/timer')\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                setError(\"E-mail or password is incorrect\")\n                console.log(errorCode, errorMessage)\n            });\n        } else {\n            firebase.auth().createUserWithEmailAndPassword(form.email, form.password)\n            .then((userCredential) => {\n                history.push('/login')\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                setError(errorMessage)\n                console.log(errorCode, errorMessage)\n            });\n        }\n        \n    }\n\n    return (\n        <div className=\"container\">\n            <h2>{type === \"login\" ? \"Log in\" : \"Sign up\"}</h2>\n            <form onSubmit={handleSubmit} className=\"log-form\">\n                <label htmlFor=\"email\">E-mail</label>\n                <input type=\"email\" id=\"email\" onChange={updateForm} />\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={updateForm} />\n                <button>{type === \"login\" ? \"Log in\" : \"Sign in\"}</button>\n                <p>{error}</p>\n            </form>\n            {type === \"login\" ? <p className=\"side-info\"><Link to=\"/signup\" className=\"clickable\">Sign up</Link></p> : null}\n        </div>\n    )\n}\n\nexport default LogComponent","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport TopPanel from './TopPanel/TopPanel'\nimport Footer from './Footer/Footer'\nimport Timer from './Timer/Timer'\nimport Stats from './Stats/Stats'\nimport Settings from './Settings/Settings'\nimport NotFound from './NotFound/NotFound'\nimport Log from './Log/Log'\nimport './App.css';\nimport { AuthProvider } from '../contexts/Auth'\n\nfunction App() {\n\n  return (\n    <AuthProvider>\n      <Router >\n        <div className=\"app\">\n          <TopPanel />\n          <Switch>\n            <Route exact path=\"/\">\n              <Timer />\n            </Route>\n            <Route path=\"/timer\">\n              <Timer />\n            </Route>\n            <Route path=\"/stats\">\n              <Stats />\n            </Route>\n            <Route path=\"/settings\">\n              <Settings />\n            </Route>\n            <Route path=\"/signup\">\n              <Log type=\"signup\" />\n            </Route>\n            <Route path=\"/login\">\n              <Log type=\"login\"/>\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </AuthProvider>\n\n  );\n}\n\nexport default App;\n","import * as types from '../actions/types'\n\nconst initialState = {\n    focusTime: 50,\n    alarmSound: 'alarm-sound',\n}\n\nexport const settings = (state = initialState, action) => {\n    switch (action.type) {\n        case types.CHANGE_FOCUS_TIME:\n            return {\n                ...state, \n                focusTime: action.focusTime\n            }\n        case types.CHANGE_ALARM_SOUND:\n            return {\n                ...state, \n                alarmSound: action.alarmSound\n            }\n        default:\n            return state\n    }\n}","import * as types from '../actions/types'\n\nconst initialState = {\n    isCounting: false,\n    isDuringCounting: false,\n    timeLeft: 50 * 1000 * 60,\n    labels: [],\n    isLoading: false,\n    isError: false,\n    currentLabel: null\n}\n\nexport const counter = (state = initialState, action) => {\n    switch (action.type) {\n        case types.FETCH_LABELS_FULFILLED:\n            return {\n                ...state,\n                labels: action.payload,\n                isLoading: false,\n                isError: false,\n            }\n        case types.FETCH_LABELS_PENDING:\n            return {\n                ...state,\n                isLoading: true,\n                isError: false\n            }\n        case types.FETCH_LABELS_REJECTED:\n            return {\n                ...state,\n                isError: true,\n                isLoading: false\n            }\n        case types.SET_CURRENT_LABEL:\n            return {\n                ...state,\n                currentLabel: action.currentLabel\n            }\n        case types.SET_IS_COUNTING:\n            return {\n                ...state,\n                isCounting: action.isCounting\n            }\n        case types.SET_IS_DURING_COUNTING:\n            return {\n                ...state,\n                isDuringCounting: action.isDuringCounting\n            }\n        case types.SET_TIME_LEFT:\n            return {\n                ...state,\n                timeLeft: action.timeLeft\n            }\n        default:\n            return state\n    }\n}","import * as types from '../actions/types'\n\nconst initialState = {\n    records: null,\n    statsOverall: {\n        today: 0,\n        week: 0,\n        month: 0\n    }\n}\n\nexport const stats = (state = initialState, action) => {\n    switch (action.type) {\n        case types.SET_STATS:\n            return {\n                ...state,\n                records: action.payload,\n            }\n        case types.SET_STATS_OVERALL:\n            return {\n                ...state,\n                statsOverall: {\n                    today: action.payload.today,\n                    week: action.payload.week,\n                    month: action.payload.month\n                }\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\";\nimport { settings } from \"./settings\";\nimport { counter } from \"./counter\";\nimport { stats } from \"./stats\"\n\nconst reducer = combineReducers({\n  settings,\n  counter,\n  stats\n});\n\nexport default reducer","import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducers/index.js';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n    );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}