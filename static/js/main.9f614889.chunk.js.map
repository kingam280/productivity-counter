{"version":3,"sources":["components/TopPanel/Menu.js","contexts/Auth.js","components/TopPanel/LogPanel.js","components/TopPanel/TopPanel.js","components/Footer/Footer.js","config/axios.js","utils/saveData.js","assets/alarm-sound.wav","assets/tink-sound.wav","assets/click-sound.wav","assets/bird-sound.wav","utils/setSound.js","store/actions/types.js","store/actions/actions.js","components/Timer/CountDown.js","components/Timer/Timer.js","components/Stats/TimeDisplay.js","components/Stats/StatsOverview.js","components/Stats/Record.js","assets/loading-spinner.gif","components/Loading/Loading.js","components/Stats/StatsTable.js","utils/useStats.js","components/Stats/Stats.js","components/Settings/FocusTimeSlider.js","components/Settings/SoundInput.js","components/Settings/Settings.js","components/NotFound/NotFound.js","config/firebase.js","components/Log/Log.js","components/App.js","store/reducers/settings.js","store/reducers/counter.js","store/reducers/index.js","store/store.js","index.js"],"names":["connect","state","isCounting","counter","to","className","AuthContext","createContext","AuthProvider","props","userId","localStorage","getItem","useState","user","setUser","Provider","value","children","LogPanel","useContext","history","useHistory","onClick","e","target","textContent","setItem","push","TopPanel","Footer","instance","axios","create","baseURL","saveData","startTime","label","data","timeInMinutes","timestamp","Date","now","post","then","res","console","log","catch","error","array","JSON","parse","unshift","stringify","setSound","alarmSound","soundPath","click","tink","bird","alarm","CHANGE_FOCUS_TIME","CHANGE_ALARM_SOUND","SET_IS_COUNTING","SET_IS_DURING_COUNTING","SET_TIME_LEFT","setIsCounting","type","types","setIsDuringCounting","isDuringCounting","setTimeLeft","timeLeft","focusTime","settings","dispatch","Math","floor","focusTimeMinutes","setFocusTimeMinutes","focusTimeSeconds","setFocusTimeSeconds","startDate","setStartDate","useEffect","timer","setTimeout","current","Audio","play","clearInterval","style","animationPlayState","useRef","id","ref","placeholder","focus","TimeDisplay","time","hours","minutes","StatsOverview","records","todayTime","setTodayTime","weekTime","setWeekTime","monthTime","setMonthTime","today","setHours","reduce","prev","parseInt","getTimeFromToday","setDate","getTimeFromMonth","day","getDay","diff","getDate","getTimeFromWeek","length","Record","date","month","getMonth","year","getFullYear","Loading","alt","src","spinner","reducer","action","stop","start","Error","StatsTable","loading","useReducer","map","record","index","useStats","setRecords","setLoading","getRecords","useCallback","a","get","Array","concat","Stats","changeFocusTime","min","max","step","onChange","left","changeAlarmSound","sound","name","Settings","NotFound","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","LogComponent","email","password","form","setForm","setError","updateForm","onSubmit","preventDefault","auth","signInWithEmailAndPassword","userCredential","uid","removeItem","errorCode","code","errorMessage","message","createUserWithEmailAndPassword","htmlFor","App","setFocusTime","setAlarmSound","exact","path","handleFocusTimeChange","initialState","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f614889.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Menu({ isCounting }) {\r\n    \r\n    return (\r\n        <>\r\n            <Link to=\"/timer\" className=\"menu-item\">Timer</Link>\r\n            <Link to={isCounting ? \"/timer\" : \"/stats\"} className={isCounting ? \"menu-item menu-inactive\" : \"menu-item\"}>Stats</Link>\r\n            <Link to={isCounting ? \"/timer\" : \"/settings\"} className={isCounting ? \"menu-item menu-inactive\" : \"menu-item\"}>Settings</Link>\r\n        </>\r\n\r\n    );\r\n  }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      isCounting: state.counter.isCounting\r\n    }\r\n}\r\n  \r\nexport default connect(mapStateToProps, null)(Menu)","import React, { useState, createContext } from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nexport const AuthProvider = (props) => {\r\n    const userId = localStorage.getItem('userId')\r\n    const [user, setUser] = useState(userId)\r\n    return (\r\n        <AuthContext.Provider value={{user, setUser}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, {useContext} from 'react';\r\nimport {AuthContext} from '../../contexts/Auth'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function LogPanel() {\r\n    const { user, setUser } = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.textContent === \"Log out\") {\r\n            localStorage.setItem('userId', '')\r\n            setUser('')\r\n            history.push('/timer')\r\n        } else if (e.target.textContent === \"Log in\") {\r\n            history.push('/login')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"log-panel\">\r\n            <p>Productivity Counter</p>\r\n            <button onClick={handleClick}>{user ? \"Log out\" : \"Log in\"}</button>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Menu from './Menu'\r\nimport LogPanel from './LogPanel'\r\nimport './TopPanel.css';\r\n\r\n\r\nexport default function TopPanel() {\r\n    \r\n    return (\r\n        <nav className=\"menu\">\r\n            <LogPanel />\r\n            <Menu />\r\n        </nav>\r\n\r\n    );\r\n  }","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport default function Footer() {\r\n    \r\n    return (\r\n      <div className=\"footer\">\r\n        Created by Kinga Mamak\r\n      </div>\r\n    );\r\n  }","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://productivity-counter-f8fed-default-rtdb.europe-west1.firebasedatabase.app/'\r\n})\r\n\r\nexport default instance","import axios from '../config/axios'\r\n\r\nconst saveData = (userId, startTime, label) => {\r\n    const data = {\r\n        label: label || 'no label',\r\n        timeInMinutes: startTime,\r\n        timestamp: Date.now()\r\n    }\r\n\r\n    if (userId) {\r\n        axios\r\n            .post(`/${userId}.json`, data)\r\n            .then(res => console.log('Successfully added to database'))\r\n            .catch(error => console.log(error))\r\n    } else {\r\n        const array = JSON.parse(localStorage.getItem('data')) || []\r\n        array.unshift(data)\r\n        localStorage.setItem('data', JSON.stringify(array))\r\n    }\r\n}\r\n\r\n\r\nexport default saveData","export default __webpack_public_path__ + \"static/media/alarm-sound.10a06f20.wav\";","export default __webpack_public_path__ + \"static/media/tink-sound.305dccef.wav\";","export default __webpack_public_path__ + \"static/media/click-sound.40d4b699.wav\";","export default __webpack_public_path__ + \"static/media/bird-sound.ebc2eaa4.wav\";","import alarm from '../assets/alarm-sound.wav'\r\nimport tink from '../assets/tink-sound.wav'\r\nimport click from '../assets/click-sound.wav'\r\nimport bird from '../assets/bird-sound.wav'\r\n\r\nconst setSound = (alarmSound) => {\r\n    let soundPath\r\n    if (alarmSound === \"click-sound\") {\r\n        soundPath = click\r\n    } else if (alarmSound === \"tink-sound\") {\r\n        soundPath = tink\r\n    } else if (alarmSound === \"birds-sound\") {\r\n        soundPath = bird\r\n    } else if (alarmSound === \"alarm-sound\") {\r\n        soundPath = alarm\r\n    }\r\n\r\n    return soundPath\r\n}\r\n\r\nexport default setSound","//SETTINGS\r\n\r\nexport const CHANGE_FOCUS_TIME = 'CHANGE_FOCUS_TIME'\r\nexport const CHANGE_ALARM_SOUND = 'CHANGE_ALARM_SOUND'\r\n\r\n\r\n//COUNTER\r\n\r\nexport const SET_IS_COUNTING = 'SET_IS_COUNTING'\r\nexport const SET_IS_DURING_COUNTING = 'SET_IS_DURING_COUNTING'\r\nexport const SET_TIME_LEFT = 'SET_TIME_LEFT'","import * as types from './types'\r\n\r\n//SETTINGS\r\n\r\nexport const changeFocusTime = (focusTime) => ({\r\n    type: types.CHANGE_FOCUS_TIME,\r\n    focusTime\r\n})\r\n\r\nexport const changeAlarmSound = (alarmSound) => ({\r\n    type: types.CHANGE_ALARM_SOUND,\r\n    alarmSound\r\n})\r\n\r\n\r\n//COUNTER\r\n\r\nexport const setIsCounting = (isCounting) => ({\r\n    type: types.SET_IS_COUNTING,\r\n    isCounting\r\n})\r\n\r\nexport const setIsDuringCounting = (isDuringCounting) => ({\r\n    type: types.SET_IS_DURING_COUNTING,\r\n    isDuringCounting\r\n})\r\n\r\nexport const setTimeLeft = (timeLeft) => ({\r\n    type: types.SET_TIME_LEFT,\r\n    timeLeft: timeLeft\r\n})","import React, { useEffect, useState, useContext} from 'react';\r\nimport saveData from '../../utils/saveData'\r\nimport setSound from '../../utils/setSound';\r\nimport { AuthContext } from '../../contexts/Auth'\r\nimport { connect } from \"react-redux\";\r\nimport { setIsCounting, setIsDuringCounting, setTimeLeft } from \"../../store/actions/actions\"\r\n\r\nconst CountDown = ({ isCounting, setIsCounting, focusTime, label, alarmSound, setIsDuringCounting,  timeLeft, setTimeLeft }) => {\r\n    const [focusTimeMinutes, setFocusTimeMinutes] = useState(Math.floor(timeLeft / 1000 / 60));\r\n    const [focusTimeSeconds, setFocusTimeSeconds] = useState(Math.floor((timeLeft / 1000) % 60));\r\n    const [startDate, setStartDate] = useState(Date.now())\r\n\r\n    const { user } = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        let timer = null\r\n        \r\n        if (isCounting && timeLeft >= 1000) {\r\n          timer = setTimeout(() => {\r\n            setTimeLeft(timeLeft - (Date.now() - startDate))\r\n            setStartDate(Date.now())\r\n          }, 100);\r\n\r\n        } else if (!isCounting) {\r\n          timer = setTimeout(() => {\r\n            setStartDate(Date.now())\r\n          }, 500)\r\n          \r\n        } else if (isCounting && timeLeft < 1000) {\r\n          timer = setTimeout(() => {\r\n            setIsCounting(false)\r\n            setIsDuringCounting(false)\r\n            setTimeLeft(focusTime * 1000 * 60)\r\n            saveData(user, focusTime, label.current.value)\r\n            label.current.value = null\r\n            const sound = new Audio(setSound(alarmSound))\r\n            sound.play()\r\n          }, 100)  \r\n        }\r\n  \r\n        setFocusTimeMinutes(timeLeft === 3600000 ? 60 : Math.floor((timeLeft / 1000 / 60) % 60))\r\n        setFocusTimeSeconds(Math.floor((timeLeft / 1000) % 60))\r\n  \r\n        return () => clearInterval(timer)\r\n      }, [isCounting, alarmSound, focusTime, label, setIsCounting, setIsDuringCounting, user, setFocusTimeMinutes, setFocusTimeSeconds, timeLeft, startDate, setTimeLeft, setStartDate])\r\n      \r\n    return (\r\n        <div className=\"timer\" style={isCounting ? {animationPlayState: \"running\"} : {animationPlayState: \"paused\"}}>\r\n          <p className=\"timer-time\">{focusTimeMinutes}:{focusTimeSeconds > 9 ? focusTimeSeconds : '0' + focusTimeSeconds}</p>\r\n          <p className=\"timer-type\">FOCUS</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    focusTime: state.settings.focusTime,\r\n    alarmSound: state.settings.alarmSound,\r\n    isCounting: state.counter.isCounting,\r\n    timeLeft: state.counter.timeLeft\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n  setIsCounting: state => dispatch(setIsCounting(state)),\r\n  setIsDuringCounting: state => dispatch(setIsDuringCounting(state)),\r\n  setTimeLeft: state => dispatch(setTimeLeft(state)),\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CountDown)","import React, { useRef } from 'react';\r\nimport './Timer.css';\r\nimport CountDown from './CountDown'\r\nimport { connect } from \"react-redux\";\r\nimport { setIsCounting, setIsDuringCounting, setTimeLeft } from \"../../store/actions/actions\"\r\n\r\nconst Timer = ({ isCounting, setIsCounting, isDuringCounting, setIsDuringCounting, focusTime, setTimeLeft }) => {\r\n    const label = useRef(null)\r\n\r\n    const handleStartCountingClick = () => {\r\n      if (!label.current.value || !isDuringCounting) label.current.focus() \r\n      setIsCounting(!isCounting)\r\n      if (!isDuringCounting) setIsDuringCounting(true)\r\n    }\r\n\r\n    const handleResetCountingClick = () => {\r\n      if (!isDuringCounting) return \r\n      setIsCounting(false)\r\n      setIsDuringCounting(false)\r\n      label.current.value = \"\"\r\n      setTimeLeft(focusTime * 1000 * 60)\r\n    }\r\n\r\n    return (\r\n      <div className=\"timer-container container\">\r\n        <h2>Timer</h2>\r\n        <input \r\n          id=\"label-input\" \r\n          ref={label} type=\"text\" \r\n          placeholder=\"Add label\"></input>\r\n        <CountDown \r\n          label={label}\r\n        />\r\n        <div className=\"timer-buttons\">\r\n          <i \r\n            onClick={handleResetCountingClick}\r\n            className=\"timer-reset fas fa-undo\"></i>  \r\n          <i \r\n            onClick={handleStartCountingClick} \r\n            className={isCounting ? \"timer-start far fa-pause-circle\" : \"timer-start far fa-play-circle\"}></i>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isCounting: state.counter.isCounting,\r\n    isDuringCounting: state.counter.isDuringCounting,\r\n    focusTime: state.settings.focusTime\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n  setIsCounting: state => dispatch(setIsCounting(state)),\r\n  setIsDuringCounting: state => dispatch(setIsDuringCounting(state)),\r\n  setTimeLeft: state => dispatch(setTimeLeft(state))\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)\r\n  ","import React from 'react'\r\n\r\nconst TimeDisplay = ({time}) => {\r\n    const hours = Math.floor(time / 60)\r\n    const minutes = time - hours * 60\r\n    return (\r\n        <p>{hours}h {minutes}m</p>\r\n    )\r\n}\r\n\r\nexport default TimeDisplay","import React, {useEffect, useState} from 'react'\r\nimport TimeDisplay from './TimeDisplay'\r\n\r\nconst getTimeFromToday = (records) => {\r\n    if (!records) return 0\r\n    const today = new Date().setHours(0,0,0)\r\n    const time = records.reduce( (prev, current) => {\r\n        if (current.timestamp >= today) {\r\n            return prev + parseInt(current.timeInMinutes)\r\n        } else {\r\n            return prev\r\n        }\r\n    }, 0)\r\n    return time\r\n}\r\n\r\nconst getTimeFromWeek = (records) => {\r\n    if (!records) return 0\r\n    const today = new Date()\r\n    const day = today.getDay()\r\n    const diff = today.getDate() - day + (day === 0 ? -6:1)\r\n    const startDate = new Date(today.setDate(diff)).setHours(0,0,0)\r\n    const time = records.reduce( (prev, current) => {\r\n        if (current.timestamp >= startDate) {\r\n            return prev + parseInt(current.timeInMinutes)\r\n        } else {\r\n            return prev\r\n        }\r\n    }, 0)\r\n    return time\r\n}\r\n\r\nconst getTimeFromMonth = (records) => {\r\n    if (!records) return 0\r\n    const today = new Date()\r\n    const startDate = new Date(today.setDate(1)).setHours(0,0,0)\r\n\r\n    const time = records.reduce( (prev, current) => {\r\n        if (current.timestamp >= startDate) {\r\n            return prev + parseInt(current.timeInMinutes)\r\n        } else {\r\n            return prev\r\n        }\r\n    }, 0)\r\n    return time\r\n}\r\n\r\nconst StatsOverview = ({records}) => {\r\n    const [todayTime, setTodayTime] = useState(0)\r\n    const [weekTime, setWeekTime] = useState(0)\r\n    const [monthTime, setMonthTime] = useState(0)\r\n\r\n    useEffect(() =>{\r\n        setTodayTime(getTimeFromToday(records));\r\n        setMonthTime(getTimeFromMonth(records))\r\n        setWeekTime(getTimeFromWeek(records))\r\n    },[records])\r\n\r\n    return (\r\n        <div className=\"stats-overview\">\r\n            <h3>Overview</h3>\r\n            <div className=\"stats-item\">\r\n                {records.length > 0 ? <TimeDisplay time={todayTime} /> : <p>-</p>}\r\n                <p>Today</p>\r\n            </div>\r\n            <div className=\"stats-item\">\r\n                {records.length > 0 ? <TimeDisplay time={weekTime} /> : <p>-</p>}\r\n                <p>Week</p>\r\n            </div>\r\n            <div className=\"stats-item\">\r\n                {records.length > 0 ? <TimeDisplay time={monthTime} /> : <p>-</p>}\r\n                <p>Month</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsOverview","import React from 'react'\r\n\r\nconst Record = ({timestamp, label, timeInMinutes}) => {\r\n    const date = new Date(timestamp)\r\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()\r\n    const month = date.getMonth() < 9 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)\r\n    const year = date.getFullYear()\r\n    \r\n    return (\r\n        <tr>\r\n            <td>{day}/{month}/{year}</td>\r\n            <td>{label}</td>\r\n            <td>{timeInMinutes} min</td>\r\n          </tr>\r\n    )\r\n}\r\n\r\nexport default Record","export default __webpack_public_path__ + \"static/media/loading-spinner.2b3e1008.gif\";","import React from 'react'\r\nimport './Loading.css';\r\nimport spinner from '../../assets/loading-spinner.gif'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <img\r\n                className=\"loading-spinner\"\r\n                alt=\"loading-spinner\"\r\n                src={spinner}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, { useReducer } from 'react';\r\nimport Record from './Record'\r\nimport Loading from '../Loading/Loading'\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'next':\r\n      if(state.stop >= action.length - 1) return state\r\n      return {start: state.start + 5, stop: state.stop + 5};\r\n    case 'prev':\r\n      if (state.start === 0) return state\r\n      return {start: state.start - 5, stop: state.stop - 5};\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport default function StatsTable({ records, loading }) {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    start: 0,\r\n    stop: 4\r\n  });\r\n\r\n  const displayTable = () => {\r\n    if (loading) {\r\n      return <Loading />\r\n    } else if (records.length > 0) {\r\n      return (\r\n        <>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Label</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {records.map( (record, index) => {\r\n              if (index >= state.start && index <= state.stop) return <Record timestamp={record.timestamp} label={record.label} timeInMinutes={record.timeInMinutes} key={record.timestamp} />\r\n              else return null \r\n            }) }\r\n          </tbody>\r\n        </table>\r\n        <button className={state.start === 0 ? `go-to button-inactive` : `go-to`} onClick={() => dispatch({type: 'prev'}) }>{`<`}</button>\r\n        <button className={state.stop >= records.length - 1 ? `go-to button-inactive` : `go-to`} onClick={() => dispatch({type: 'next', length: records.length}) }>{`>`}</button>\r\n        </>\r\n      )\r\n    } else {\r\n      return (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Label</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"latest-sessions\">\r\n      <h3>Latest sessions</h3>\r\n      {displayTable()}\r\n      \r\n    </div>\r\n  );\r\n}","import {useEffect, useState, useCallback} from 'react'\r\nimport axios from '../config/axios'\r\n\r\nconst useStats = (userId) => {\r\n    const [records, setRecords] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    const getRecords = useCallback(async () => {\r\n        \r\n        if (userId) {\r\n          setLoading(prev => !prev)\r\n          await axios\r\n            .get(`/${userId}.json`)\r\n            .then(res => res.data)\r\n            .then(data => {\r\n              for (let record in data) {\r\n                setRecords(prev => Array(data[record]).concat(prev))\r\n              }\r\n              setLoading(prev => !prev)\r\n            })\r\n        } else {\r\n          const data = JSON.parse(localStorage.getItem('data')) || []\r\n          setRecords(data)\r\n        }\r\n        \r\n    }, [userId])\r\n\r\n    useEffect(() => {\r\n        getRecords()       \r\n    }, [getRecords])\r\n\r\n    return {records, loading}\r\n}\r\n\r\nexport default useStats","import React, {useContext} from 'react';\r\nimport StatsOverview from './StatsOverview'\r\nimport StatsTable from './StatsTable'\r\nimport './Stats.css';\r\nimport useStats from '../../utils/useStats'\r\nimport { AuthContext } from '../../contexts/Auth'\r\n\r\nexport default function Stats() {\r\n    const { user } = useContext(AuthContext)\r\n    const { records, loading } = useStats(user)\r\n\r\n    return (\r\n      <div className=\"stats container\">\r\n        <h2>Statistics</h2>\r\n        <StatsOverview records={records}/>\r\n        <StatsTable records={records} loading={loading}/>\r\n      </div>\r\n    );\r\n  }","import React, {useRef} from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { changeFocusTime, setTimeLeft } from \"../../store/actions/actions\"\r\n\r\nconst FocusTimeSlider = ({ changeFocusTime, focusTime, setTimeLeft }) => {\r\n    const focus = useRef(focusTime)\r\n\r\n    const handleOnChange = () => {\r\n      changeFocusTime(focus.current.value)\r\n      setTimeLeft(focus.current.value * 1000 * 60)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h3>Focus time</h3>\r\n        <div className=\"slider-container\">\r\n          <input\r\n            className=\"slider-input\" \r\n            type=\"range\" \r\n            id=\"focus\" \r\n            min=\"5\" \r\n            max=\"60\" \r\n            step=\"5\"\r\n            ref={focus}\r\n            value={focusTime}\r\n            onChange={handleOnChange}\r\n          />\r\n          <label className=\"slider-label-top\" style={{left: `${1 + (focusTime/5 - 1) * (98/11)}%`}}><p>{focusTime}</p></label>\r\n          <p className=\"slider-label\">5min</p>\r\n          <p className=\"slider-label\">60min</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    focusTime: state.settings.focusTime,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n  changeFocusTime: time => dispatch(changeFocusTime(time)),\r\n  setTimeLeft: state => dispatch(setTimeLeft(state))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FocusTimeSlider)\r\n\r\n","import React from 'react'\r\nimport setSound from '../../utils/setSound'\r\nimport { connect } from \"react-redux\";\r\nimport { changeAlarmSound } from \"../../store/actions/actions\"\r\n\r\nconst SoundInput = ({changeAlarmSound, alarmSound}) => {\r\n\r\n    const handleChange = (e) => {\r\n        let alarmSound = e.target.value\r\n        const soundPath = setSound(alarmSound)\r\n        const sound = new Audio(soundPath)\r\n        changeAlarmSound(alarmSound)\r\n        sound.play()\r\n    }\r\n    return (\r\n        <>\r\n        <h3>Alarm sound</h3>\r\n        <select name=\"sound\" id=\"sound\" onChange={handleChange} value={alarmSound}>\r\n            <option value=\"alarm-sound\">Alarm</option>\r\n            <option value=\"birds-sound\">Birds</option>\r\n            <option value=\"click-sound\">Click</option>\r\n            <option value=\"tink-sound\">Tink</option>\r\n        </select>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      alarmSound: state.settings.alarmSound,\r\n    }\r\n  }\r\n  \r\nconst mapDispatchToProps = dispatch => ({ \r\n    changeAlarmSound: sound => dispatch(changeAlarmSound(sound))\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SoundInput)\r\n","import React from 'react';\r\nimport FocusTimeSlider from './FocusTimeSlider';\r\nimport SoundInput from './SoundInput'\r\nimport './Settings.css';\r\n\r\nexport default function Settings() {\r\n\r\n    return (\r\n      <div className=\"settings container\">\r\n        <h2>Settings</h2>\r\n        <FocusTimeSlider />\r\n        <SoundInput />\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n        Not Found\r\n      </div>\r\n    );\r\n  }","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBSHpvMjTlpU5jqIK56q01MtZyKZuiI-F0\",\r\n    authDomain: \"productivity-counter-f8fed.firebaseapp.com\",\r\n    databaseURL: \"https://productivity-counter-f8fed-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"productivity-counter-f8fed\",\r\n    storageBucket: \"productivity-counter-f8fed.appspot.com\",\r\n    messagingSenderId: \"993104967686\",\r\n    appId: \"1:993104967686:web:0ed07f89d714b18de62b87\",\r\n    measurementId: \"G-FT8B6494T4\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, { useState, useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../../config/firebase'\r\nimport {AuthContext} from '../../contexts/Auth'\r\nimport './Log.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LogComponent = ({type}) => {\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [error, setError] = useState('')\r\n    const { setUser } = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const updateForm = (e) => {\r\n        setError(false)\r\n        setForm(prev => {\r\n            return {\r\n                ...prev,\r\n                [e.target.id]: e.target.value\r\n            }\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (type === \"login\") {\r\n            firebase.auth().signInWithEmailAndPassword(form.email, form.password)\r\n            .then((userCredential) => {\r\n                var user = userCredential.user;\r\n                setUser(user.uid)\r\n                localStorage.setItem('userId', user.uid)\r\n                localStorage.removeItem('data')\r\n                history.push('/timer')\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                setError(\"E-mail or password is incorrect\")\r\n                console.log(errorCode, errorMessage)\r\n            });\r\n        } else {\r\n            firebase.auth().createUserWithEmailAndPassword(form.email, form.password)\r\n            .then((userCredential) => {\r\n                history.push('/login')\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                setError(errorMessage)\r\n                console.log(errorCode, errorMessage)\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>{type === \"login\" ? \"Log in\" : \"Sign up\"}</h2>\r\n            <form onSubmit={handleSubmit} className=\"log-form\">\r\n                <label htmlFor=\"email\">E-mail</label>\r\n                <input type=\"email\" id=\"email\" onChange={updateForm} />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={updateForm} />\r\n                <button>{type === \"login\" ? \"Log in\" : \"Sign in\"}</button>\r\n                <p>{error}</p>\r\n            </form>\r\n            {type === \"login\" ? <p className=\"side-info\"><Link to=\"/signup\" className=\"clickable\">Sign up</Link></p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogComponent","import React, { useState } from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport TopPanel from './TopPanel/TopPanel'\r\nimport Footer from './Footer/Footer'\r\nimport Timer from './Timer/Timer'\r\nimport Stats from './Stats/Stats'\r\nimport Settings from './Settings/Settings'\r\nimport NotFound from './NotFound/NotFound'\r\nimport Log from './Log/Log'\r\nimport './App.css';\r\nimport { AuthProvider } from '../contexts/Auth'\r\n\r\nfunction App() {\r\n  const [focusTime, setFocusTime] = useState(50)\r\n  const [alarmSound, setAlarmSound] = useState('alarm-sound')\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <Router >\r\n        <div className=\"app\">\r\n          <TopPanel />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Timer />\r\n            </Route>\r\n            <Route path=\"/timer\">\r\n              <Timer />\r\n            </Route>\r\n            <Route path=\"/stats\">\r\n              <Stats />\r\n            </Route>\r\n            <Route path=\"/settings\">\r\n              <Settings \r\n                handleFocusTimeChange={setFocusTime} \r\n                focus={focusTime}\r\n                setAlarmSound={setAlarmSound}\r\n                alarmSound={alarmSound}\r\n              />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n              <Log type=\"signup\" />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Log type=\"login\"/>\r\n            </Route>\r\n            <Route>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </AuthProvider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as types from '../actions/types'\r\n\r\nconst initialState = {\r\n    focusTime: 50,\r\n    alarmSound: 'alarm-sound',\r\n}\r\n\r\nexport const settings = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.CHANGE_FOCUS_TIME:\r\n            return {\r\n                ...state, \r\n                focusTime: action.focusTime\r\n            }\r\n        case types.CHANGE_ALARM_SOUND:\r\n            return {\r\n                ...state, \r\n                alarmSound: action.alarmSound\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as types from '../actions/types'\r\n\r\nconst initialState = {\r\n    isCounting: false,\r\n    isDuringCounting: false,\r\n    timeLeft: 50 * 1000 * 60,\r\n}\r\n\r\nexport const counter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_IS_COUNTING:\r\n            return {\r\n                ...state,\r\n                isCounting: action.isCounting\r\n            }\r\n        case types.SET_IS_DURING_COUNTING:\r\n            return {\r\n                ...state,\r\n                isDuringCounting: action.isDuringCounting\r\n            }\r\n        case types.SET_TIME_LEFT:\r\n            return {\r\n                ...state,\r\n                timeLeft: action.timeLeft\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { settings } from \"./settings\";\r\nimport { counter } from \"./counter\";\r\n\r\nconst reducer = combineReducers({\r\n  settings,\r\n  counter\r\n});\r\n\r\nexport default reducer","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './reducers/index.js';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    composeWithDevTools(\r\n        applyMiddleware()\r\n    )\r\n    );","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { store } from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}